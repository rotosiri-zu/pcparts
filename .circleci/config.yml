
# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          BUNDLER_VERSION: 1.17.3
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/pcparts

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create RAILS_ENV=test
      - run: bundle exec rake db:schema:load RAILS_ENV=test
      - run: bundle exec bin/webpack
      - run:
          name: RSpec
          command: bundle exec rspec
      - run:
          name: Rubocop
          command: bundle exec rubocop
      - add_ssh_keys:
          fingerprints:
            - "7e:a5:ba:5b:56:a4:08:a5:61:40:92:87:2b:aa:7b:d0"
       - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy